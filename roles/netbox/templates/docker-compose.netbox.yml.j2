---
version: '3.4'

# This networks section required for the pacakge to be visible to Traefik. 
# DO NOT Remove
networks:
  traefik_network:
    external:
      name: homelabos_traefik

services:
  app:
    # REQUIRED
    image: netboxcommunity:netbox:latest
    restart: unless-stopped
    networks:
      - traefik_network
    user: '{{ uid.stdout }}'
    volumes:
      - "{{ volumes_root }}/netbox/startup_scripts:/opt/netbox/startup_scripts:z,ro"
      - "{{ volumes_root }}/netbox/configuration:etc/netbox/config:z,ro"
      - "{{ volumes_root }}/netbox/reports:/etc/netbox/reports:z,ro"
      - "{{ volumes_root }}/netbox/scripts:/etc/netbox/scripts:z,ro"
      - "{{ volumes_root }}/netbox/"
      - netbox-static-files:/opt/netbox/netbox/static:z
      - netbox-media-files:/opt/netbox/netbox/media:z
      - netbox-nginx-config:/etc/netbox-nginx:z
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=homelabos_traefik"
      - "traefik.http.services.netbox.loadbalancer.server.scheme=http"
      - "traefik.http.services.netbox.loadbalancer.server.port=3000"
      - "traefik.http.routers.netbox-http.rule=Host(`{{ netbox.subdomain }}.{{ domain }}`)"
      - "traefik.http.routers.netbox-http.entrypoints=http"
{% if not netbox.https_only %}
      - "traefik.http.routers.netbox-http.middlewares={% if netbox.https_only %}redirect@file, {% else %}{% if netbox.auth %}{% if authelia.enable %}authelia@file{% else %}basicAuth@file{% endif %}, {% endif %}{% endif %}customFrameHomelab@file"
{% else %}
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
      - "traefik.http.routers.netbox-http.middlewares=redirect-to-https"
{% endif %}
      - "traefik.http.routers.netbox.rule=Host(`{{ netbox.subdomain }}.{{ domain }}`)"
      - "traefik.http.routers.netbox.entrypoints=https"
      - "traefik.http.routers.netbox.middlewares={% if netbox.auth %}{% if authelia.enable %}authelia@file{% else %}basicAuth@file{% endif %}, {% endif %}customFrameHomelab@file"
      - "traefik.http.routers.netbox.tls=true"
{% if traefik.dns_challenge_provider %}
      - "traefik.http.routers.netbox.tls.certresolver=dns"
      - "traefik.http.routers.netbox.tls.domains[0].main={{ domain }}"
      - "traefik.http.routers.netbox.tls.domains[0].sans=*.{{ domain }}"
{% else %}
      - "traefik.http.routers.netbox.tls.certresolver=http"
{% endif %}
{% if enable_tor %}
      - "traefik.http.routers.netbox-tor-http.rule=Host(`netbox.{{ tor_domain }}`)"
      - "traefik.http.routers.netbox-tor-http.entrypoints=http"
      - "traefik.http.routers.netbox-tor-http.middlewares={% if netbox.auth %}{% if authelia.enable %}authelia-tor@file{% else %}basicAuth@file{% endif %}, {% endif %}customFrameHomelab-tor@file"
{% endif %}

  netbox-worker:
    <<: *app
    depends_on:
      - redis
    entrypoint:
      - python3
      - /opt/netbox/netbox/manage.py
    command:
      - rqworker
  nginx:
    command: nginx -c /etc/netbox-nginx/nginx.conf
    image: nginx:1.17-alpine
    depends_on:
    - netbox
    ports:
    - 8080
    volumes:
    - netbox-static-files:/opt/netbox/netbox/static:ro
    - netbox-nginx-config:/etc/netbox-nginx/:ro
  postgres:
    image: postgres:11-alpine
    env_file: env/postgres.env
    volumes:
    - netbox-postgres-data:/var/lib/postgresql/data
  redis:
    image: redis:5-alpine
    command:
    - sh
    - -c # this is to evaluate the $REDIS_PASSWORD from the env
    - redis-server --appendonly yes --requirepass $$REDIS_PASSWORD ## $$ because of docker-compose
    env_file: env/redis.env
    volumes:
    - netbox-redis-data:/data
  redis-cache:
    image: redis:5-alpine
    command:
    - sh
    - -c # this is to evaluate the $REDIS_PASSWORD from the env
    - redis-server --requirepass $$REDIS_PASSWORD ## $$ because of docker-compose
    env_file: env/redis-cache.env
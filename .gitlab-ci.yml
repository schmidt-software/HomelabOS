# Job from R2Devops hub --> r2devops.io

stages:
  - static_tests
  - build
  - deploy

include:
  #- remote: 'https://jobs.r2devops.io/latest/mega_linter.yml'
  - remote: 'https://jobs.r2devops.io/latest/super_linter.yml'
  - remote: 'https://jobs.r2devops.io/latest/mkdocs.yml'
  - remote: 'https://jobs.r2devops.io/pages.yml'

.mega_linter:
  image:
    name: nvuillam/mega-linter-ci_light:v4

  variables:
    MEGALINTER_CONFIG: "yamllint.conf"


super_linter:
  variables:
    #YAML_CONFIG_FILE: "yamllint.conf"

    VALIDATE_ANSIBLE: "false"
    VALIDATE_ARM: "false"
    VALIDATE_BASH: "false"
    VALIDATE_BASH_EXEC: "false"
    VALIDATE_CLOJURE: "false"
    VALIDATE_CLOUDFORMATION: "false"
    VALIDATE_COFFEE: "false"
    VALIDATE_CSHARP: "false"
    VALIDATE_CSS: "false"
    VALIDATE_DART: "false"
    VALIDATE_DOCKERFILE: "false"
    VALIDATE_DOCKERFILE_HADOLINT: "false"
    VALIDATE_EDITORCONFIG: "false"
    VALIDATE_ENV: "false"
    VALIDATE_GO: "false"
    VALIDATE_GROOVY: "false"
    VALIDATE_HTML: "false"
    VALIDATE_JAVA: "false"
    VALIDATE_JAVASCRIPT_ES: "false"
    VALIDATE_JAVASCRIPT_STANDARD: "false"
    VALIDATE_JSON: "false"
    VALIDATE_JSX: "false"
    VALIDATE_KUBERNETES_KUBEVAL: "false"
    VALIDATE_LATEX: "false"
    VALIDATE_LUA: "false"
    VALIDATE_MARKDOWN: "false"
    VALIDATE_OPENAPI: "false"
    VALIDATE_PERL: "false"
    VALIDATE_PHP: "false"
    VALIDATE_PHP_BUILTIN: "false"
    VALIDATE_PHP_PHPCS: "false"
    VALIDATE_PHP_PHPSTAN: "false"
    VALIDATE_PHP_PSALM: "false"
    VALIDATE_PROTOBUF: "false"
    VALIDATE_PYTHON: "false"
    VALIDATE_PYTHON_PYLINT: "false"
    VALIDATE_PYTHON_FLAKE8: "false"
    VALIDATE_PYTHON_BLACK: "false"
    VALIDATE_POWERSHELL: "false"
    VALIDATE_R: "false"
    VALIDATE_RAKU: "false"
    VALIDATE_RUBY: "false"
    VALIDATE_SHELL_SHFMT: "false"
    VALIDATE_SNAKEMAKE_LINT: "false"
    VALIDATE_SNAKEMAKE_SNAKEFMT: "false"
    VALIDATE_STATES: "false"
    VALIDATE_SQL: "false"
    VALIDATE_TERRAFORM: "false"
    VALIDATE_TERRAFORM_TERRASCAN: "false"
    VALIDATE_TERRAGRUNT: "false"
    VALIDATE_TSX: "false"
    VALIDATE_TYPESCRIPT_ES: "false"
    VALIDATE_TYPESCRIPT_STANDARD: "false"
    VALIDATE_XML: "false"

hugo:
  image:
    name: golang:1.17.6-buster
    entrypoint: [""]

  stage: build

  variables:
    PROJECT_ROOT: "."
    HUGO_VERSION: "0.68.3"
    HUGO_SOURCE: "website"
    HUGO_OUTPUT: "public/"
    ADDITIONAL_OPTIONS: ""

  script:
    - cd ${PROJECT_ROOT}
    - curl -SL https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_${HUGO_VERSION}_Linux-64bit.tar.gz -o /tmp/hugo.tar.gz
    - tar -xzf /tmp/hugo.tar.gz -C /tmp
    - mv /tmp/hugo /usr/local/bin/
    - hugo -s ${HUGO_SOURCE} -d ${CI_PROJECT_DIR}/${HUGO_OUTPUT} ${ADDITIONAL_OPTIONS}

  artifacts:
    when: always
    paths:
      - ${CI_PROJECT_DIR}/${HUGO_OUTPUT}
  
  only:
    - master

mkdocs:
  variables:
    MKDOCS_OUTPUT_PATH: 'public/docs/'
  
  only:
    - master

pages:
  variables:
    PAGES_BUILD_PATH: 'public/'

  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
